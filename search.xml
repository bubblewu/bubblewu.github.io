<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>my test</title>
      <link href="/ckb6dsj1h0000huyd2fxk6q53/"/>
      <url>/ckb6dsj1h0000huyd2fxk6q53/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>celery和redis交互全流程解析</title>
      <link href="/ckb6dcew20029c4yd7bg885jl/"/>
      <url>/ckb6dcew20029c4yd7bg885jl/</url>
      
        <content type="html"><![CDATA[<p>celery 和 redis 之间交互的基本原理</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> celery 和 redis 之间交互的基本原理：</span><br><span class="line">1、当发起一个 task 时，会向 redis 的 celery key 中插入一条记录。</span><br><span class="line">2、如果这时有正在待命的空闲 worker，这个 task 会立即被 worker 领取。</span><br><span class="line">3、如果这时没有空闲的 worker，这个 task 的记录会保留在 celery key 中。</span><br><span class="line">4、这时会将这个 task 的记录从 key celery 中移除，并添加相关信息到 unacked 和 unacked_index 中。</span><br><span class="line">5、worker 根据 task 设定的期望执行时间执行任务，如果接到的不是延时任务或者已经超过了期望时间，则立刻执行。</span><br><span class="line">6、worker 开始执行任务时，通知 redis。（如果设置了 CELERY_ACKS_LATE &#x3D; True 那么会在任务执行结束时再通知）</span><br><span class="line">7、redis 接到通知后，将 unacked 和 unacked_index 中相关记录移除。</span><br><span class="line">8、如果在接到通知前，worker 中断了，这时 redis 中的 unacked 和 unacked_index 记录会重新回到 celery key 中。(这个回写的操作是由 worker 在 “临死” 前自己完成的，所以在关闭 worker 时为防止任务丢失，请务必使用正确的方法停止它，如: celery multi stop w1 -A proj1)</span><br><span class="line">9、在 celery key 中的 task 可以再次重复上述 2 以下的流程。</span><br><span class="line">10、celery 只是利用 redis 的 list 类型，当作个简单的 Queue，并没有使用消息订阅等功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">1、需要配置celery的backend，backend的作用就是存储任务执行结果。</span><br><span class="line">2、当celery key中的任务成功被worker认领并且执行成功，celery会向配置好的bachend中，写入以task_id为key。</span><br><span class="line">3、所以，可以通过查看bachend中是否有以task_id为key的对象来判断task是否执行成功。</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> celery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>copy</title>
      <link href="/ckb6dcev3000kc4yd01wifot7/"/>
      <url>/ckb6dcev3000kc4yd01wifot7/</url>
      
        <content type="html"><![CDATA[<p>图片增加容量大小使用方法</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy 1M.jpg /b + 5M.file /b 6M.jpg</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">copy /b 1M.jpg + 5M.file 6M.jpg</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> copy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kindle</title>
      <link href="/ckb6dcevi001cc4yd5xwc4lrz/"/>
      <url>/ckb6dcevi001cc4yd5xwc4lrz/</url>
      
        <content type="html"><![CDATA[<p>Kindle使用教程</p><a id="more"></a><h2 id="免费电子书下载地址"><a href="#免费电子书下载地址" class="headerlink" title="免费电子书下载地址"></a>免费电子书下载地址</h2><ul><li><a href="http://panghubook.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://panghubook.cn/</a></li><li><a href="https://kindle.51nazhun.pub/" target="_blank" rel="external nofollow noopener noreferrer">https://kindle.51nazhun.pub/</a></li><li><a href="https://www.jiumodiary.com/" target="_blank" rel="external nofollow noopener noreferrer">https://www.jiumodiary.com/</a></li></ul><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Kindle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kindle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git修改用户名密码</title>
      <link href="/ckb6dcevy0020c4ydgvtkg5ej/"/>
      <url>/ckb6dcevy0020c4ydgvtkg5ej/</url>
      
        <content type="html"><![CDATA[<p>用户使用git时的使用免密拉取和上传，修改免密设置，取消免密设置</p><a id="more"></a><h2 id="第一次输入密码之后自动免密"><a href="#第一次输入密码之后自动免密" class="headerlink" title="第一次输入密码之后自动免密"></a>第一次输入密码之后自动免密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git 默认即支持首次输入用户名密码，后续自动记忆，使用免密设置</span></span><br></pre></td></tr></table></figure><h2 id="取消免密设置"><a href="#取消免密设置" class="headerlink" title="取消免密设置"></a>取消免密设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> credential.helper store</span><br><span class="line"><span class="comment"># 使用 --global 参数则全局生效，不适用则针对当前目录下的.git生效</span></span><br></pre></td></tr></table></figure><h2 id="设置免密"><a href="#设置免密" class="headerlink" title="设置免密"></a>设置免密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment"># 使用 --global 参数则全局生效，不适用则针对当前目录下的.git生效</span></span><br></pre></td></tr></table></figure><h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大多公司的账户密码考虑到安全性，隔段时间便会失效，需更改密码</span></span><br><span class="line"><span class="comment"># 这个时候大多git默认已经记忆上次用户名和密码，且不用跳出输入用户和密码的弹窗</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 取消免密功能，使它能正确弹出用户名和密码框</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> credential.helper store</span><br><span class="line"><span class="comment"># 2. 使用git拉取或提交代码，相当于首次提交 会自动弹出用户名密码弹窗，输入即可</span></span><br><span class="line"><span class="comment"># 3. 再次打开免密功能，记忆第二步的用户名和密码</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="win图形化修改git提交密码"><a href="#win图形化修改git提交密码" class="headerlink" title="win图形化修改git提交密码"></a>win图形化修改git提交密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置路径</span></span><br><span class="line"><span class="comment"># 控制面板 --&gt; 用户账号 --&gt; 凭据管理器 --&gt; windows凭据 --&gt; 修改对应的git地址的用户名和密码后保存即可</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Charles</title>
      <link href="/ckb6dceuy000ec4ydba9hgiyi/"/>
      <url>/ckb6dceuy000ec4ydba9hgiyi/</url>
      
        <content type="html"><![CDATA[<p>Charles 注册码</p><a id="more"></a><h2 id="Charles-注册码"><a href="#Charles-注册码" class="headerlink" title="Charles 注册码"></a>Charles 注册码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCF</span><br><span class="line">4cfbb2ea5c75c77858</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Charles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> licenses </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装并配置Jenkins</title>
      <link href="/ckb6dcev7000sc4yd0gvh4hbj/"/>
      <url>/ckb6dcev7000sc4yd0gvh4hbj/</url>
      
        <content type="html"><![CDATA[<p>Mac使用Homebrew包管理器安装并配置管理Jenkins</p><a id="more"></a><h2 id="mac安装Jenkins"><a href="#mac安装Jenkins" class="headerlink" title="mac安装Jenkins"></a>mac安装Jenkins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. Mac安装JDK并配置环境变量</span></span><br><span class="line"><span class="comment"># 2.安装Jenkins</span></span><br><span class="line">brew install jenkins</span><br><span class="line">brew services start jenkins  <span class="comment"># 命令会自动设置为开机启动</span></span><br><span class="line">brew services stop jenkins</span><br><span class="line">brew services restart jenkins</span><br><span class="line"><span class="comment"># 局域网访问:</span></span><br><span class="line"><span class="comment"># 使用brew安装jenkins会避免很多其他安装方式产生的用户权限问题，但是会将httpListenAddress默认设置为127.0.0.1，这样我们虽然可以在本地用localhost:8080访问，但是本机和局域网均无法用ip访问。解决办法为修改两个路径下的plist配置。并重启</span></span><br><span class="line"><span class="comment"># ～/Library/LaunchAgents/homebrew.mxcl.jenkins.plist</span></span><br><span class="line"><span class="comment"># /usr/local/opt/jenkins/homebrew.mxcl.jenkins.plist</span></span><br><span class="line"><span class="comment"># 将上面两个plist中的httpListenAddress后的ip地址，修改为本机IP或者0.0.0.0即可。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消开机启动</span></span><br><span class="line">sudo launchctl unload -w /Library/LaunchDaemons/org.jenkins-ci.plist </span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">sudo launchctl load -w /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>interview</title>
      <link href="/ckb6dcev0000gc4yd8btrhat4/"/>
      <url>/ckb6dcev0000gc4yd8btrhat4/</url>
      
        <content type="html"><![CDATA[<p>Interview</p><a id="more"></a><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i):</span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j + <span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'第&#123;0&#125;次排序: &#123;1&#125;'</span>.format(len(data)-i, data))</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2. 装饰器单例</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleton</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">    _instance = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_instance</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> _instance:</span><br><span class="line">            _instance.setdefault(cls, cls(*args, **kwargs))</span><br><span class="line">        <span class="keyword">return</span> _instance.get(cls)</span><br><span class="line">    <span class="keyword">return</span> get_instance</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################ sql</span></span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename(<span class="keyword">id</span>,<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="number">1</span>,w)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename <span class="keyword">values</span>(<span class="number">1</span>,w)</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"><span class="keyword">update</span> tablename <span class="keyword">set</span> 字段名=<span class="string">'newvalue'</span> <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tablename <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 分组</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 字段名 <span class="keyword">having</span> <span class="keyword">avg</span>()</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############# Linux</span></span><br><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ps -ef | grep <span class="string">'kafka'</span>  <span class="comment"># 显示PID</span></span><br><span class="line"><span class="comment"># 杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时查看日志后十行file.log</span></span><br><span class="line">tail -n 10 -f file.log  <span class="comment"># tail -f  == tailf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制</span></span><br><span class="line">cp -a oldfile newfolder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口号是否被占用</span></span><br><span class="line">netstat -anp | grep 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir 创建目录</span></span><br><span class="line">mkdir a</span><br><span class="line">mkdir -p a/b/c  <span class="comment"># 创建多级目录时使用 -p 命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm 删除目录、文件</span></span><br><span class="line">rm -rf a/b/c  f  <span class="comment"># 不提醒确认则删除     shell脚本中常用  r是目录也删除，递归删除</span></span><br><span class="line">rm -r a/b/c     <span class="comment"># 提醒用户是否确认删除  命令行使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat 查看文件</span></span><br><span class="line"><span class="comment"># cat -n [文件名]  -n 显示行号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp  拷贝文件</span></span><br><span class="line">cp A.txt b.txt</span><br><span class="line">cp a b</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo  $PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep</span></span><br><span class="line">cat -n A.txt | grep filter  <span class="comment"># 只显示filter内容</span></span><br><span class="line">cat -n A.txt | grep -v filter  <span class="comment"># -v不显示filter内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find</span></span><br><span class="line">fine /root -name A.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ps  查看进程PID</span></span><br><span class="line">ps -ef | grep mongo</span><br><span class="line"></span><br><span class="line"><span class="comment"># kill -9 结束进程(根据PID)</span></span><br><span class="line"><span class="built_in">kill</span> -9 [PID]</span><br><span class="line"></span><br><span class="line"><span class="comment"># mv</span></span><br><span class="line">mv a.txt /a/b</span><br><span class="line"></span><br><span class="line"><span class="comment"># netstat 检查端口是否被占用</span></span><br><span class="line">netstat -anp | grep 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum search package</span></span><br><span class="line"><span class="comment"># yum install package</span></span><br><span class="line"><span class="comment"># yum uninstall package</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed 修改文本</span></span><br><span class="line">sed -e <span class="string">'s/oldstr/newstr/g'</span> A.txt  <span class="comment"># 's'字符串 'g'全局替换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar</span></span><br><span class="line">tar -zcvf a.tar.gz /root/a  <span class="comment">#归档打包</span></span><br><span class="line">tar -zxvf a.tar.gz /root/a  <span class="comment">#解压缩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk 处理带格式文件文本</span></span><br><span class="line"><span class="built_in">kill</span> -9 `ps | grep bash | awk <span class="string">' '</span> <span class="string">'&#123;print $1&#125;'</span>`  <span class="comment">#  === kill -9 PID</span></span><br><span class="line"><span class="comment"># awk ' ' 空格分割字符串</span></span><br><span class="line"><span class="comment"># awk '&#123;print $1&#125;' 打印或取值第一个</span></span><br><span class="line"><span class="comment"># ` ` 代表执行代码块获取执行结果，优先执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nohub 不挂起进行 命令行保护进程启动程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># head 从头开始查看文件前10行</span></span><br><span class="line">head -n 10 a.log</span><br><span class="line"><span class="comment"># tail</span></span><br><span class="line">tail -n 10 a.log  <span class="comment"># 从末尾开始查看文件最后10行</span></span><br><span class="line">tail -f a.log     <span class="comment"># 实时查看末尾</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># less</span></span><br><span class="line"><span class="comment"># more</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># touch、vi 创建文件</span></span><br><span class="line">touch a.txt</span><br><span class="line">vi a.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># history  查看命令行的历史命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod  赋权限</span></span><br><span class="line">chmod 777 A.txt</span><br><span class="line">chmod -x A.txt</span><br><span class="line"><span class="comment"># x可执行权限 r只读 w写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rz 上传  yum install lrzsz</span></span><br><span class="line"><span class="comment"># sz 下载</span></span><br><span class="line"><span class="comment"># scp 文件传输</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wc</span></span><br><span class="line">wc -l a/b/A.txt  <span class="comment"># 统计文件行数</span></span><br><span class="line"><span class="comment"># du</span></span><br><span class="line">du -sh A.txt   <span class="comment"># 查看文件大小</span></span><br><span class="line">du -sh /a/b    <span class="comment"># 查看目录大小</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    测试用例八大要素</span><br><span class="line">用例编号</span><br><span class="line">操作步骤</span><br><span class="line">测试标题</span><br><span class="line">重要级别</span><br><span class="line">前置条件</span><br><span class="line">测试输入</span><br><span class="line">所属模块</span><br><span class="line">预期结果</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">黑盒测试用例设计方法包括等价类划分法、边界值分析法、错误推测法、因果图法、判定表驱动法、正交试验设计法、功能图法、场景图法等。</span><br><span class="line"></span><br><span class="line">白盒子测试方法：（强度由低到高）语句覆盖、判定覆盖、条件覆盖、判定条件覆盖、条件组合覆盖、路径覆盖。</span><br><span class="line"></span><br><span class="line">测试人员经常用到的有等价类，边界值，场景法，因果图法。</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins部署Python</title>
      <link href="/ckb6dceva000zc4yd65dt2vxh/"/>
      <url>/ckb6dceva000zc4yd65dt2vxh/</url>
      
        <content type="html"><![CDATA[<p>Jenkins部署 - 使用shell脚本后台守护进程运行</p><a id="more"></a><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证程序后台运行不杀死  和 nohub、&amp; 一同使用</span></span><br><span class="line">BUILD_ID=dontKillMe</span><br><span class="line"></span><br><span class="line"><span class="comment"># source /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务(先杀死Python当前运行的进程)</span></span><br><span class="line"><span class="comment"># ps -ef | grep python3 | grep -v grep | awk -F ' ' '&#123;print $2&#125;' | xargs kill -9</span></span><br><span class="line">pid=`ps -ef | grep python3 | grep -v grep | awk -F <span class="string">' '</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$&#123;pid[@]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录</span></span><br><span class="line"><span class="keyword">if</span> [ -d /root/Jenkins/production ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">rm -rf /root/Jenkins/production</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新部署目录</span></span><br><span class="line">mkdir -p /root/Jenkins/production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入部署目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/Jenkins/production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入</span></span><br><span class="line"><span class="built_in">cd</span> &lt;proj_path&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动  BUILD_ID=dontKillMe  保证程序后台运行不杀死  和 nohub、&amp; 一同使用</span></span><br><span class="line">nohup python3 app.py &amp;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 firewalld</title>
      <link href="/ckb6dcev6000oc4yd06tz5l1x/"/>
      <url>/ckb6dcev6000oc4yd06tz5l1x/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 通过防火墙开放指定端口</p><a id="more"></a><h2 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看开通端口列表</span></span><br><span class="line">firewall-cmd --list-ports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放80端口</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=80/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭80端口</span></span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启防火墙生效</span></span><br><span class="line">systemctl restart firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># PS: </span></span><br><span class="line"><span class="comment"># firewalld配置的防火墙策略也分为两种模式</span></span><br><span class="line"><span class="comment"># 1、runtime，当前生效，重启后失效</span></span><br><span class="line"><span class="comment"># 2、permanent，当前失效，重启后生效，为了让permanet生效，一般会执行friewall-cmd --reload，使其立即生效</span></span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>Linux上新的防火墙软件，和iptables差不多的工具。firewalld是centos7的一大特性，两大优点：支持动态更新，不用重启服务；加入了防火墙的“zone”概念。</li><li>firewalld能动态修改单条规则，不像iptables，修改规则后必须全部刷新才能生效。</li><li>firewalld在使用上要比iptables人性化很多。firewalld自身并不具备防火墙的功能，而是和iptables一样需要通过内核的netfilter来实现，也就是说firewalld和iptables一样，他们的作用都是用于维护规则，而真正使用规则干活的是内核的netfilter。</li></ul><hr><ul><li><p>rpm -qa | grep firewalld | 查看是否安装</p></li><li><p>yum install firewalld 安装</p></li><li><p>rpm -qa | grep firewall-config 查看是否安装图形界面</p></li><li><p>yum install firewall-config 如果需要图形界面的话，需要安装</p></li><li><p>systemctl start firewalld 启动</p></li><li><p>systemctl restart firewalld 重启</p></li><li><p>systemctl disable firewalld 停止</p></li><li><p>systemctl stop firewalld 禁用</p></li><li><p>systemctl status firewalld | - firewall-cmd --state 查看状态</p></li><li><p>firewall-cmd --list-ports 查看开通端口列表</p></li><li><p>firewall-cmd --zone=public --remove-port=80/tcp --permanent 关闭端口</p></li><li><p>firewall-cmd --permanent --zone=public --add-port=80/tcp 开通端口</p></li><li><p>firewall-cmd --get-default-zone 查看default zone</p></li><li><p>firewall-cmd --get-active-zones 查看active zone</p></li><li><p>备注：--zone #作用域 --add-port=80/tcp #添加端口，格式为：端口/通讯协议 --permanent #永久生效，没有此参数重启后失效<br>firewall防火墙默认的几个zone（由firewalld 提供的区域按照从不信任到信任的顺序排序）</p></li></ul><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 network</title>
      <link href="/ckb6dcev9000xc4yd62ktfj5k/"/>
      <url>/ckb6dcev9000xc4yd62ktfj5k/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7网络配置(Mac虚拟机下的共享配置)</p><a id="more"></a><h2 id="编辑网络配置文件"><a href="#编辑网络配置文件" class="headerlink" title="编辑网络配置文件"></a>编辑网络配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件ifcfg-eth0 ifcfg-eth1 ...</span></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"><span class="comment"># 复制以下项</span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NOBOOT=yes</span><br><span class="line">IPADDR=192.168.10.192</span><br><span class="line">NETMASK=255.255.252.0</span><br><span class="line">GATEWAY=192.168.10.254</span><br><span class="line">DNS1=192.168.10.3</span><br><span class="line">DNS2=223.6.6.6</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络CentOS7网络后生效</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="参数解读"><a href="#参数解读" class="headerlink" title="参数解读"></a>参数解读</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注：这里面的IP地址，子网掩码，GATE ，DNS都按照主机的配置。</span></span><br><span class="line"><span class="comment"># 之后，重启一下虚拟机应该就可以。</span></span><br><span class="line"><span class="comment"># 之后，ping下主机IP地址，ping 下局域网其他主机IP地址，再ping下外网ip地址，可以的话就算成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从dhcp改成static</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line"><span class="comment"># 从no改成yes。系统将在启动时自动开启该接口。</span></span><br><span class="line">ONBOOT=yes</span><br><span class="line"><span class="comment"># 设置IP地址</span></span><br><span class="line">IPADDR=</span><br><span class="line"><span class="comment"># 设置子网掩码</span></span><br><span class="line">NETMASK=</span><br><span class="line"><span class="comment"># 设置网关</span></span><br><span class="line">GATEWAY=</span><br><span class="line"><span class="comment"># 设置DNS</span></span><br><span class="line">DNS1=</span><br><span class="line">DNS2=</span><br><span class="line"><span class="comment"># 表示该接口将通过该配置文件进行设置，而不是通过网络管理器进行管理</span></span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 时间时区调整</title>
      <link href="/ckb6dcevs001pc4yd6ic1gs55/"/>
      <url>/ckb6dcevs001pc4yd6ic1gs55/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 调整时间为中国时区时间</p><a id="more"></a><h2 id="启用NTP同步"><a href="#启用NTP同步" class="headerlink" title="启用NTP同步"></a>启用NTP同步</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ntp服务</span></span><br><span class="line">yum install ntp</span><br><span class="line"><span class="comment"># 开机启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start ntpd</span><br><span class="line"><span class="comment"># 更改时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"><span class="comment"># 启用ntp同步</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes</span><br><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">ntpq -p</span><br></pre></td></tr></table></figure><h2 id="timedatectl-命令同步时区"><a href="#timedatectl-命令同步时区" class="headerlink" title="timedatectl 命令同步时区"></a>timedatectl 命令同步时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取时间  等同于 timedatectl status</span></span><br><span class="line">timedatectl</span><br><span class="line"><span class="comment"># 设置时间</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-time <span class="string">"YYYY-MM-DD HH:MM:SS"</span></span><br><span class="line"><span class="comment"># 列出所有时区</span></span><br><span class="line">timedatectl list-timezones</span><br><span class="line"><span class="comment"># 更改时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"><span class="comment"># 或   ln -sf /usr/share/zoneinfor/Asia/Shanghai /etc/localtime     </span></span><br><span class="line">设置是否与NTP服务器同步 //yes或者no</span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes</span><br><span class="line"><span class="comment"># 将硬件时钟调整为与本地时钟一致</span></span><br><span class="line">hwclock --systohc --localtime 或 timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line"><span class="comment"># 注，硬件时钟默认使用UTC时间，因为硬件时钟不能保存时区和夏令时调整，修改后就无法从硬件时钟中读取出准确标准时间，因此不建议修改。修改后系统会出现警告。</span></span><br><span class="line"><span class="comment"># 将硬件时间设置成 UTC</span></span><br><span class="line">hwclock --systohc --utc 或 timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line"><span class="comment"># 显示硬件时间：</span></span><br><span class="line">hwclock --show</span><br><span class="line"><span class="comment"># 设置硬件时间：</span></span><br><span class="line">hwclock --<span class="built_in">set</span> --date ‘08/02/2012 12:00:00’</span><br><span class="line"><span class="comment"># 将硬件时间同步到系统时间：</span></span><br><span class="line">hwclock --hctosys</span><br><span class="line"><span class="comment"># 强制把系统时间写入CMOS：</span></span><br><span class="line"><span class="comment"># clock -w</span></span><br></pre></td></tr></table></figure><h2 id="时钟概念"><a href="#时钟概念" class="headerlink" title="时钟概念"></a>时钟概念</h2><ul><li><p>在CentOS 6版本，时间设置有date、hwclock命令，从CentOS 7开始，使用了一个新的命令timedatectl。</p></li><li><p>（1）UTC<br>整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。</p></li><li><p>（2）GMT<br>格林威治标准时间 (Greenwich Mean Time)指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。(UTC与GMT时间基本相同，本文中不做区分)</p></li><li><p>（3）CST<br>中国标准时间 (China Standard Time)【GMT + 8 = UTC + 8 = CST】</p></li><li><p>（4）DST<br>夏令时(Daylight Saving Time) 指在夏天太阳升起的比较早时，将时钟拨快一小时，以提早日光的使用。（中国不使用）</p></li><li><p>硬件时钟：<br>RTC(Real-Time Clock)或CMOS时钟，一般在主板上靠电池供电，服务器断电后也会继续运行。仅保存日期时间数值，无法保存时区和夏令时设置。</p></li><li><p>系统时钟：<br>一般在服务器启动时复制RTC时间，之后独立运行，保存了时间、时区和夏令时设置。</p></li></ul><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> timedatectl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 nginx</title>
      <link href="/ckb6dcevf0015c4yd0nnicc52/"/>
      <url>/ckb6dcevf0015c4yd0nnicc52/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 nginx</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖包 c编译gcc依赖</span></span><br><span class="line">yum install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget -c https://nginx.org/download/nginx-1.12.0.tar.gz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -zxvf nginx-1.12.0.tar.gz</span><br><span class="line"><span class="comment"># 进入安装包</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.12.0</span><br><span class="line"><span class="comment"># 编译预处理</span></span><br><span class="line">./configure</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入nginx目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"><span class="comment"># 启动nginx ./nginx [-s stop|reload]</span></span><br><span class="line">./nginx -s reload -t</span><br></pre></td></tr></table></figure><h2 id="配置文件路径说明"><a href="#配置文件路径说明" class="headerlink" title="配置文件路径说明"></a>配置文件路径说明</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure           \</span></span><br><span class="line"><span class="comment"># --prefix=/etc/nginx                     \</span></span><br><span class="line"><span class="comment"># --sbin-path=/usr/sbin/nginx                 \</span></span><br><span class="line"><span class="comment"># --conf-path=/etc/nginx/nginx.conf              \</span></span><br><span class="line"><span class="comment"># --error-log-path=/var/log/nginx/error.log          \</span></span><br><span class="line"><span class="comment"># --http-log-path=/var/log/nginx/access.log          \</span></span><br><span class="line"><span class="comment"># --pid-path=/var/run/nginx.pid                \</span></span><br><span class="line"><span class="comment"># --lock-path=/var/run/nginx.lock</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 mongodb</title>
      <link href="/ckb6dcevc0013c4ydadkm7bkq/"/>
      <url>/ckb6dcevc0013c4ydadkm7bkq/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 mongodb</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 repo文件</span></span><br><span class="line">touch /etc/yum.repos.d/mongodb-org-4.0.repo</span><br><span class="line"><span class="comment"># 配置 repo文件(复制以下内容到.repo文件)</span></span><br><span class="line">[mongodb-org-4.0]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/<span class="variable">$releasever</span>/mongodb- org/4.0/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo yum install -y mongodb-org</span><br><span class="line"><span class="comment"># 编辑配置文件: 修改绑定地址为0.0.0.0 </span></span><br><span class="line">vim /etc/mongod.conf</span><br><span class="line"><span class="comment"># 启动、停止、重启</span></span><br><span class="line">service mongod start/stop/restart</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改数据和日志的存储位置</span></span><br><span class="line"><span class="comment"># bin目录下增加mongodb.conf文件</span></span><br><span class="line"><span class="comment"># 内容：</span></span><br><span class="line">port=27017</span><br><span class="line">dbpath=/usr/<span class="built_in">local</span>/mongodb/data/</span><br><span class="line">logpath=/usr/<span class="built_in">local</span>/mongodb/<span class="built_in">log</span>/mongodb.log</span><br><span class="line">fork = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 释义：</span></span><br><span class="line"><span class="comment"># port: 数据库服务使用端口</span></span><br><span class="line"><span class="comment"># dbpath: 数据存放的文件位置</span></span><br><span class="line"><span class="comment"># logpath: 日志文件的存放位置</span></span><br><span class="line"><span class="comment"># fork: 后台守护进程运行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动命令：</span></span><br><span class="line">./mongod -f mongodb.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭方式：</span></span><br><span class="line">./mongo</span><br><span class="line"><span class="comment"># &gt;</span></span><br><span class="line"><span class="comment"># &gt;use admin</span></span><br><span class="line"><span class="comment"># &gt;db.shutdownServer()</span></span><br></pre></td></tr></table></figure><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">yum erase $(rpm -qa | grep mongodb-org)</span><br><span class="line">rm -r /var/<span class="built_in">log</span>/mongodb</span><br><span class="line">rm -r /var/lib/mongo</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 kafka</title>
      <link href="/ckb6dcevq001mc4ydex4k0e94/"/>
      <url>/ckb6dcevq001mc4ydex4k0e94/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 kafka，简单配置使用kafka</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget http://mirror.bit.edu.cn/apache/kafka/2.2.0/kafka_2.12-2.2.0.tgz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -xzf kafka_2.12-2.2.0.tgz</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动zookeeper</span></span><br><span class="line">bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line"><span class="comment"># 启动kafka</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建topic</span></span><br><span class="line">bin/kafka-topics.sh --create --bootstrap-server localhost:9092 -- replication-factor 1 --partitions 1 --topic <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 列出topic</span></span><br><span class="line">bin/kafka-topics.sh --list --bootstrap-server localhost:9092</span><br><span class="line"><span class="comment"># 发送消息</span></span><br><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 接收消息</span></span><br><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 -- topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure><h2 id="启动zookeeper"><a href="#启动zookeeper" class="headerlink" title="启动zookeeper"></a>启动zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line"><span class="comment"># 2 守护进程启动方式 防止挂掉</span></span><br><span class="line">bin/zookeeper-server-start.sh -daemon config/zookeeper.properties</span><br></pre></td></tr></table></figure><h2 id="启动kafka"><a href="#启动kafka" class="headerlink" title="启动kafka"></a>启动kafka</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br><span class="line"><span class="comment"># 2 守护进程启动方式 防止挂掉</span></span><br><span class="line">bin/kafka-server-start.sh -daemon config/server.properties</span><br></pre></td></tr></table></figure><h2 id="查看topic列表"><a href="#查看topic列表" class="headerlink" title="查看topic列表"></a>查看topic列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --list --zookeeper localhost:2181</span><br></pre></td></tr></table></figure><h2 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure><h2 id="关闭kafka"><a href="#关闭kafka" class="headerlink" title="关闭kafka"></a>关闭kafka</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-stop.sh</span><br></pre></td></tr></table></figure><h2 id="关闭zookeeper"><a href="#关闭zookeeper" class="headerlink" title="关闭zookeeper"></a>关闭zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zookeeper-server-stop.sh</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7  c 编译依赖安装</title>
      <link href="/ckb6dcev5000mc4yd0y9b9ars/"/>
      <url>/ckb6dcev5000mc4yd0y9b9ars/</url>
      
        <content type="html"><![CDATA[<p>Linux使用源码安装软件时，需要c编译时，首先安装c编译依赖</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line">yum install pcre-devel</span><br><span class="line">yum install zlib zlib-devel</span><br><span class="line">yum install openssl openssl-devel</span><br><span class="line"></span><br><span class="line">yum install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 python</title>
      <link href="/ckb6dcevj001fc4yddlzyaeu7/"/>
      <url>/ckb6dcevj001fc4yddlzyaeu7/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 yum安装 python3.6</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">yum install -y openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</span><br><span class="line"><span class="comment"># 下载安装包 </span></span><br><span class="line">wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz</span><br><span class="line"><span class="comment"># 解压安装包 </span></span><br><span class="line">tar -xzvf Python-3.6.5.tgz</span><br><span class="line"><span class="comment"># 进入安装目录 </span></span><br><span class="line"><span class="built_in">cd</span> Python-3.6.5</span><br><span class="line"><span class="comment"># 编译预处理 </span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python</span><br><span class="line"><span class="comment"># 编译并安装 </span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="修改Linux的Python版本默认为Python3"><a href="#修改Linux的Python版本默认为Python3" class="headerlink" title="修改Linux的Python版本默认为Python3"></a>修改Linux的Python版本默认为Python3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux默认Python为2.7</span></span><br><span class="line"><span class="comment"># 建立新安装的python3.6.5的软连接</span></span><br><span class="line">$ ln -s /usr/python/bin/python3 /usr/bin/python3</span><br></pre></td></tr></table></figure><h2 id="python3添加环境变量"><a href="#python3添加环境变量" class="headerlink" title="python3添加环境变量"></a>python3添加环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># PATH=$PATH:$HOME/bin:/opt/python3.6.5/bin  # opt需修改为自己安装的Python所在目录</span></span><br><span class="line"><span class="comment"># export PATH</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br><span class="line"></span><br><span class="line">python --version</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 JDK</title>
      <link href="/ckb6dcev8000tc4yd0s460ld9/"/>
      <url>/ckb6dcev8000tc4yd0s460ld9/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 JDK1.8 并配置环境变量</p><a id="more"></a><h2 id="yum安装jdk"><a href="#yum安装jdk" class="headerlink" title="yum安装jdk"></a>yum安装jdk</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># set java environment</span></span><br><span class="line"><span class="comment"># JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.181-3.b13.el7_5.x86_64</span></span><br><span class="line"><span class="comment"># PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="comment"># CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="comment"># export JAVA_HOME  CLASSPATH  PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl发送HTTP请求</title>
      <link href="/ckb6dcevo001jc4yd4rtv3875/"/>
      <url>/ckb6dcevo001jc4yd4rtv3875/</url>
      
        <content type="html"><![CDATA[<p>使用curl发送HTTP请求，用于简单验证接口连接性。</p><a id="more"></a><h2 id="GET-请求示例"><a href="#GET-请求示例" class="headerlink" title="GET 请求示例"></a>GET 请求示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET请求 -i</span></span><br><span class="line">curl -i &lt;url&gt;</span><br><span class="line"><span class="comment"># 返回示例：</span></span><br><span class="line"><span class="comment"># HTTP/1.0 200 OK</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 151</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 05:21:50 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><h2 id="POST-请求示例"><a href="#POST-请求示例" class="headerlink" title="POST 请求示例"></a>POST 请求示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># POST请求示例 -i</span></span><br><span class="line">curl -i -H <span class="string">"Content-Type: application/json"</span> -X POST -d <span class="string">'&#123;"data":"data"&#125;'</span> &lt;url&gt;</span><br><span class="line"><span class="comment"># HTTP/1.0 201 Created</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 104</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 05:56:21 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><h2 id="curl-带密码请求"><a href="#curl-带密码请求" class="headerlink" title="curl 带密码请求"></a>curl 带密码请求</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -u username:password -i url</span></span><br><span class="line">curl -u miguel:python -i &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP/1.0 200 OK</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 316</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 06:46:45 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh-keygen</title>
      <link href="/ckb6dcevw001wc4ydfge21b5l/"/>
      <url>/ckb6dcevw001wc4ydfge21b5l/</url>
      
        <content type="html"><![CDATA[<p>ssh-keygen简单用法<br>本文主要针对ssh-keygen配置GitHub Pages使用ssh免密部署<br>ssh秘钥登录特点：1.安全；2.免输密码。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen为ssh自带命令，Mac、Linux、Ubuntu等都自带</span></span><br></pre></td></tr></table></figure><h2 id="检查是否配置过ssh服务"><a href="#检查是否配置过ssh服务" class="headerlink" title="检查是否配置过ssh服务"></a>检查是否配置过ssh服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mac、linux、ubuntu</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ls</span><br><span class="line"><span class="comment"># id_rsa  id_rsa.pub  known_hosts</span></span><br><span class="line"><span class="comment"># 如果有id_rsa  id_rsa.pub，证明以前曾经配置过，如果忘记曾经配置过，请删除此两项</span></span><br></pre></td></tr></table></figure><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br><span class="line"><span class="comment"># 后面全部enter，不选择任何选项，最后生成的秘钥为无密码密钥</span></span><br></pre></td></tr></table></figure><h2 id="查看公钥和私钥"><a href="#查看公钥和私钥" class="headerlink" title="查看公钥和私钥"></a>查看公钥和私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看公钥</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看私钥</span></span><br><span class="line">cat ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h2 id="服务器配置公钥"><a href="#服务器配置公钥" class="headerlink" title="服务器配置公钥"></a>服务器配置公钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以github为例</span></span><br><span class="line"><span class="comment"># 配置路径：Setting -&gt; SSH and GPG keys -&gt; New SSH key or Add SSH key</span></span><br><span class="line"><span class="comment"># title可以随便起（尽量和自己的私钥所在电脑相关联）</span></span><br><span class="line"><span class="comment"># Key:    # 复制id_rsa.pub文件的全部内容</span></span><br><span class="line"><span class="comment"># 最后保存即可</span></span><br></pre></td></tr></table></figure><h2 id="测试是否连通"><a href="#测试是否连通" class="headerlink" title="测试是否连通"></a>测试是否连通</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以github为例</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh-keygen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scp</title>
      <link href="/ckb6dcevh0019c4ydai4r83hj/"/>
      <url>/ckb6dcevh0019c4ydai4r83hj/</url>
      
        <content type="html"><![CDATA[<p>Linux scp 命令用于 Linux 之间复制文件和目录。<br>scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。<br>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。<br>scp [可选参数] file_source file_target</p><a id="more"></a><h2 id="从本地复制到远程Linux"><a href="#从本地复制到远程Linux" class="headerlink" title="从本地复制到远程Linux"></a>从本地复制到远程Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制文件1 (自动重命名)</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_file</span><br><span class="line"><span class="comment"># 复制文件2 (无重命名)</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_folder</span><br><span class="line"><span class="comment"># PS: 需要输入远程ssh登录的密码；如果未指定用户名，则需要输入用户名和密码</span></span><br></pre></td></tr></table></figure><h2 id="从远程Linux复制到本地"><a href="#从远程Linux复制到本地" class="headerlink" title="从远程Linux复制到本地"></a>从远程Linux复制到本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制文件1 (自动重命名)</span></span><br><span class="line">scp remote_username@remote_ip:remote_file local_file</span><br><span class="line"><span class="comment"># 复制文件2 (无重命名)</span></span><br><span class="line">scp remote_username@remote_ip:remote_folder local_folder</span><br><span class="line"><span class="comment"># PS: 需要输入远程ssh登录的密码；如果未指定用户名，则需要输入用户名和密码</span></span><br></pre></td></tr></table></figure><h2 id="复制文件夹"><a href="#复制文件夹" class="headerlink" title="复制文件夹"></a>复制文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp命令后加 -r 参数即可</span></span><br><span class="line">scp -r</span><br><span class="line"></span><br><span class="line">scp [可选参数] file_source file_target</span><br><span class="line"><span class="comment"># 参数说明：</span></span><br><span class="line"><span class="comment"># -1： 强制scp命令使用协议ssh1</span></span><br><span class="line"><span class="comment"># -2： 强制scp命令使用协议ssh2</span></span><br><span class="line"><span class="comment"># -4： 强制scp命令只使用IPv4寻址</span></span><br><span class="line"><span class="comment"># -6： 强制scp命令只使用IPv6寻址</span></span><br><span class="line"><span class="comment"># -B： 使用批处理模式（传输过程中不询问传输口令或短语）</span></span><br><span class="line"><span class="comment"># -C： 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</span></span><br><span class="line"><span class="comment"># -p：保留原文件的修改时间，访问时间和访问权限。</span></span><br><span class="line"><span class="comment"># -q： 不显示传输进度条。</span></span><br><span class="line"><span class="comment"># -r： 递归复制整个目录。</span></span><br><span class="line"><span class="comment"># -v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</span></span><br><span class="line"><span class="comment"># -c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -l limit： 限定用户所能使用的带宽，以Kbit/s为单位。</span></span><br><span class="line"><span class="comment"># -o ssh_option： 如果习惯于使用ssh_config(5)中的参数传递方式，</span></span><br><span class="line"><span class="comment"># -P port：注意是大写的P, port是指定数据传输用到的端口号</span></span><br><span class="line"><span class="comment"># -S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>terminal</title>
      <link href="/ckb6dcew10026c4yd9ophcxzt/"/>
      <url>/ckb6dcew10026c4yd9ophcxzt/</url>
      
        <content type="html"><![CDATA[<p>Mac终端terminal自动补全之忽略大小写</p><a id="more"></a><h2 id="自动补全忽略大小写（terminal）"><a href="#自动补全忽略大小写（terminal）" class="headerlink" title="自动补全忽略大小写（terminal）"></a>自动补全忽略大小写（terminal）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终端中输入以下命令：</span></span><br><span class="line">$ nano .inputrc</span><br><span class="line"><span class="comment"># 在里面粘贴一下语句后, Control+O 保存</span></span><br><span class="line"><span class="built_in">set</span> completion-ignore-case on</span><br><span class="line"><span class="built_in">set</span> show-all-if-ambiguous on</span><br><span class="line">TAB: menu-complete</span><br><span class="line"></span><br><span class="line"><span class="comment"># PS: 需重启终端生效</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipv6</title>
      <link href="/ckb6dcew8002jc4yd8clq1c01/"/>
      <url>/ckb6dcew8002jc4yd8clq1c01/</url>
      
        <content type="html"><![CDATA[<p>Mac系统关闭ipv6</p><a id="more"></a><h2 id="Mac修改网络时遇到无法修改，需先关闭ipv6"><a href="#Mac修改网络时遇到无法修改，需先关闭ipv6" class="headerlink" title="Mac修改网络时遇到无法修改，需先关闭ipv6"></a>Mac修改网络时遇到无法修改，需先关闭ipv6</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">networksetup -listallnetworkservices | sed 1d | xargs -I &#123;&#125; networksetup -setv6off &#123;&#125;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew</title>
      <link href="/ckb6dcew6002gc4ydb7y62k73/"/>
      <url>/ckb6dcew6002gc4ydb7y62k73/</url>
      
        <content type="html"><![CDATA[<p>mac提供包管理器的安装和使用(类似Ubuntu的apt，Linux的yum、pkg)</p><a id="more"></a><h2 id="Homebrew安装"><a href="#Homebrew安装" class="headerlink" title="Homebrew安装"></a>Homebrew安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew list package</span><br><span class="line">brew install &lt;package_name&gt;</span><br><span class="line">brew uninstall &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h2 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Cakebrew和LaunchRocket</span></span><br><span class="line">brew cask install cakebrew</span><br><span class="line">brew cask install launchrocket</span><br><span class="line"><span class="comment"># PS：注意 launchrocket 只能管理Homebrew安装的服务，不支持源码下载安装的服务</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Finder</title>
      <link href="/ckb6dcew00023c4yd687kdv1l/"/>
      <url>/ckb6dcew00023c4yd687kdv1l/</url>
      
        <content type="html"><![CDATA[<p>Finder 显示与隐藏 隐藏文件(.文件)</p><a id="more"></a><h2 id="命令行永久改变显示方式"><a href="#命令行永久改变显示方式" class="headerlink" title="命令行永久改变显示方式"></a>命令行永久改变显示方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示</span></span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">true</span>; killall Finder</span><br><span class="line"><span class="comment"># 隐藏</span></span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">false</span>; killall Finder</span><br><span class="line"><span class="comment"># PS: 输入完命令回车后，需重启Finder：左上角的苹果标志--&gt;强制退出--&gt;Finder--&gt;重新启动</span></span><br></pre></td></tr></table></figure><h2 id="临时显示-隐藏快捷键"><a href="#临时显示-隐藏快捷键" class="headerlink" title="临时显示/隐藏快捷键"></a>临时显示/隐藏快捷键</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + .</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac开启任何来源</title>
      <link href="/ckb6dcevt001tc4ydedr0ampl/"/>
      <url>/ckb6dcevt001tc4ydedr0ampl/</url>
      
        <content type="html"><![CDATA[<p>Mac在macOS系统下，系统偏好设置中的“安全与隐私”默认已经去除了允许“任何来源”App的选项，如果不开启会直接影响到无法运行一些第三方应用。</p><a id="more"></a><h2 id="开启权限命令"><a href="#开启权限命令" class="headerlink" title="开启权限命令"></a>开启权限命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示</span></span><br><span class="line">sudo spctl --status --master-disable</span><br><span class="line"><span class="comment"># 隐藏</span></span><br><span class="line">sudo spctl --status --master-enable</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/wongqingbin/Frieza/raw/master/image/spctl.png" alt="任何来源.png"></p><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bubble Sort</title>
      <link href="/ckb6dcew4002dc4yddn5p7ruc/"/>
      <url>/ckb6dcew4002dc4yddn5p7ruc/</url>
      
        <content type="html"><![CDATA[<p>经典面试题---进阶版冒泡排序</p><a id="more"></a><h2 id="常规版"><a href="#常规版" class="headerlink" title="常规版"></a>常规版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">"""常规版"""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(data)-i<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j+<span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">7</span>]</span><br><span class="line">    print(data)</span><br><span class="line">    print(foo(data))</span><br></pre></td></tr></table></figure><h2 id="进阶版"><a href="#进阶版" class="headerlink" title="进阶版"></a>进阶版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    进阶版</span></span><br><span class="line"><span class="string">    最坏情况 时间复杂度 O(n**2)</span></span><br><span class="line"><span class="string">    最好情况 时间复杂度 O(n)</span></span><br><span class="line"><span class="string">    稳定排序法</span></span><br><span class="line"><span class="string">    空间复杂度最佳 只需要一个额外空间</span></span><br><span class="line"><span class="string">    适用于数据量小或有部分数据已经排过序的情况</span></span><br><span class="line"><span class="string">    :param data:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># i 倒序循环列表排序</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        flag = <span class="literal">False</span>  <span class="comment"># flag判断是否执行了交换操作</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i):  <span class="comment"># i 为倒序循环，所以j的最大值即是i 0～i</span></span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j + <span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">                flag = <span class="literal">True</span>  <span class="comment"># 执行过交换操作，把flag置为True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:  <span class="comment"># 执行完一次扫描后，判断是否执行过交换操作，如果没有交换过数据，就表示此时数组已完成排序，故直接跳出循环</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'第&#123;0&#125;次排序: &#123;1&#125;'</span>.format(len(data)-i, data))</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">7</span>]</span><br><span class="line">    print(data)</span><br><span class="line">    print(bubble_sort(data))</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interviewer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>antdvp.vue-cli</title>
      <link href="/ckb6dcewa002nc4yd2aad9nwd/"/>
      <url>/ckb6dcewa002nc4yd2aad9nwd/</url>
      
        <content type="html"><![CDATA[<p>ant-design-vue-pro 使用脚手架 vue-cli 创建项目</p><a id="more"></a><h2 id="vue-create"><a href="#vue-create" class="headerlink" title="vue create "></a>vue create <my-project-name></my-project-name></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#npm install -g @vue/cli  vue --version  @vue/cli 4.3.1</span></span><br><span class="line">vue create &lt;my-project-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Vue CLI v4.3.1</span></span><br><span class="line"><span class="comment"># ? Please pick a preset: Manually select features</span></span><br><span class="line"><span class="comment"># ? Check the features needed for your project: Babel, Router, Vuex, CSS Pre-processors, Linter</span></span><br><span class="line"><span class="comment"># ? Use history mode for router? (Requires proper server setup for index fallback in production) Yes</span></span><br><span class="line"><span class="comment"># ? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Less</span></span><br><span class="line"><span class="comment"># ? Pick a linter / formatter config: Prettier</span></span><br><span class="line"><span class="comment"># ? Pick additional lint features: Lint on save</span></span><br><span class="line"><span class="comment"># ? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files</span></span><br><span class="line"><span class="comment"># ? Save this as a preset for future projects? Yes</span></span><br><span class="line"><span class="comment"># ? Save preset as: a-d-v-p</span></span><br></pre></td></tr></table></figure><h2 id="Less、history"><a href="#Less、history" class="headerlink" title="Less、history"></a>Less、history</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Less: css加载器使用less，方便之后做主题颜色修改配置</span></span><br><span class="line"><span class="comment"># history: 最终路由中不带#号，漂亮的url路由</span></span><br><span class="line"><span class="comment"># In dedicated config files: 配置文件不堆积在package.json中；使用单独的配置文件vue.confi.js需手动新建</span></span><br></pre></td></tr></table></figure><h2 id="npm-run-serve"><a href="#npm-run-serve" class="headerlink" title="npm run serve"></a>npm run serve</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证第一步是否创建成功</span></span><br><span class="line"><span class="built_in">cd</span> &lt;my-project-name&gt;</span><br><span class="line">npm run serve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步 安装插件ant-design-vue 和 moment</span></span><br><span class="line">npm i ant-design-vue moment</span><br></pre></td></tr></table></figure><h2 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># webpack配置之less-load引入</span></span><br><span class="line">mkdir vue.config.js</span><br><span class="line"><span class="comment"># 修改vue.config.js文件，添加css内容</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // less-load</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      less: &#123;</span><br><span class="line">        // 这里的选项会传递给 less-loader</span><br><span class="line">        javascriptEnabled: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 组件和样式按需加载，优化减小前端加载流量</span></span><br><span class="line"><span class="comment"># babel.config.js 文件配置</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  presets: [<span class="string">"@vue/cli-plugin-babel/preset"</span>],</span><br><span class="line">  plugins: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"import"</span>,</span><br><span class="line">      &#123; libraryName: <span class="string">"ant-design-vue"</span>, libraryDirectory: <span class="string">"es"</span>, style: <span class="literal">true</span> &#125;</span><br><span class="line">    ] // `style: <span class="literal">true</span>` 会加载 less 文件</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment"># 安装插件 babel-plugin-import</span></span><br><span class="line">npm i --save-dev babel-plugin-import</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/wongqingbin/Frieza/raw/master/image/advp.png" alt="advp.png"></p><p><br><br><span class="btn large center"><a href="https://github.com/wongqingbin/blog/issues" target="_blank" rel="external nofollow noopener noreferrer" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/ckb6dcetf0001c4ydcusz9bu3/"/>
      <url>/ckb6dcetf0001c4ydcusz9bu3/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
